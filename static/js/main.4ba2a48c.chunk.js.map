{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPABETICALLY","SORT_BY_LENGTH","RESET","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,sBACxBC,EAAiB,iBAEjBC,EAAQ,QA2BP,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAAwBC,EAAxB,GAA2D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACpCI,EAAW,YAAOD,GAExB,GAAIL,EACF,OAAQA,GACN,KAAKL,EACHW,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACvD,MAEF,KAAKb,EACHU,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UACxD,MAEF,QACE,OAAOL,EAQb,OAJIJ,GACFI,EAAYM,UAGPN,EAOcO,CAAenB,EAAiB,CACnDM,YACAE,eAQF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CAAE,WACnChB,IAAcL,IAChBsB,QAAS,kBAAMhB,EAAaN,IAJ9B,SAMGA,IAGH,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,WACtChB,IAAcJ,IAChBqB,QAAS,kBAAMhB,EAAaL,IAJ9B,SAMGA,IAGH,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YACrCd,IACHe,QAAS,kBAAMd,GAAeD,IAJhC,SA/Da,aAwEXF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,CAAE,WACrChB,IAAcH,IAChBoB,QAxCI,WACZhB,EAAa,IACbE,GAAc,IAkCR,SAMGN,OAKP,6BACGO,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCvGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4ba2a48c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPABETICALLY = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\nconst SORT_REVERSE = 'Reverse';\nconst RESET = 'Reset';\n\nfunction getSortedGoods(goods, { sortField, isReversed }) {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_BY_ALPABETICALLY:\n        sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n\n      case SORT_BY_LENGTH:\n        sortedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n\n      default:\n        return sortedGoods;\n    }\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getSortedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', { 'is-light':\n            sortField !== SORT_BY_ALPABETICALLY })}\n          onClick={() => setSortField(SORT_BY_ALPABETICALLY)}\n        >\n          {SORT_BY_ALPABETICALLY}\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', { 'is-light':\n            sortField !== SORT_BY_LENGTH })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          {SORT_BY_LENGTH}\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light':\n            !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          {SORT_REVERSE}\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', { 'is-light':\n              sortField !== RESET })}\n            onClick={reset}\n          >\n            {RESET}\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}